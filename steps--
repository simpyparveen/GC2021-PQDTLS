//Readfile
Goto mainfolder Execute : "$make" in folder
Go to tests and execute : "$make" in folder
We need to make changes in /test/makefile as follows to use PSK: 

	CFLAGS  := -DLOG_LEVEL_DTLS=$(LOG_LEVEL_DTLS) -I. -I.. -I../$(DTLS_SUPPORT) 
	CFLAGS  := -DLOG_LEVEL_DTLS=$(LOG_LEVEL_DTLS) -I. -I.. -I../$(DTLS_SUPPORT) -i DTLS_PSK


Running :

	On server run command:-
		
	$ ./dtls-server 

	On client run command:-
		
	$ ./dtls-client 0.0.0.0
	$ ./dtls-client Server-IP



/**************************************************************************************************************************************************************************************************/

/** dtls write  sends application data */
int dtls_write(struct dtls_context_t *ctx, session_t *dst, uint8_t *buf, size_t len) 



/* dtls_connect() returns a value greater than zero if a new connection attempt is made, 0 for session reuse. */
int dtls_connect(dtls_context_t *ctx, const session_t *dst)
 

/* check if the same peer is already in our list */
/* set local peer role to client, remote is server */
/* send ClientHello with empty Cookie */

int dtls_connect_peer(dtls_context_t *ctx, dtls_peer_t *peer);


//CLIENT HELLO
static int dtls_send_client_hello(dtls_context_t *ctx, dtls_peer_t *peer, uint8_t cookie[], size_t cookie_length)

//
static int dtls_send_handshake_msg_hash(dtls_context_t *ctx, dtls_peer_t *peer, session_t *session, uint8_t header_type, uint8_t *data, size_t data_length, int add_hash)

//
static inline uint8_t *dtls_set_handshake_header(uint8_t type, dtls_peer_t *peer, int length, int frag_offset, int frag_length, uint8_t *buf) //returns next byte after buf


//Sends data passed as buf as a DTLS record of type "type" to given peer.The data is encrypted and compressed according to security parameters 
static int dtls_send_multi(dtls_context_t *ctx, dtls_peer_t *peer, dtls_security_parameters_t *security , session_t *session, unsigned char type, uint8_t *buf_array[], size_t buf_len_array[], size_t buf_array_len);
